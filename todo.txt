MUST:
- Consistent scope between client = resource server force when updating scopes resource server (SERVER SIDE VALIDATION)
- GUI finished
  - Add tooltips in the GUI for info about all the attributes
  - Delete client and resource server need different -styled- confirmation
  - Remove $("a.copy-clipboard").zclip and do normal control copy by user
  - Add Access Tokens readonly and delete views
  - Add access token expiration to client registration form
- Documentation overall and README.md per submodule (especially surfconext-authn)
- Document how to extend the application (by overriding DefaultPackagesResourceConfig and Spring Configuration)
- Turn off session cookies
- The example-resource-server validate scopes must validate granted scopes
- Only check the scopes that are actually asked by the clients in the consent page. Do not check any scopes if there
  are no scopes requested by the client.
- rename the apis-example-resource-server-war module so that it cannot be confused with the
  apis-example-resource-server anymore.
- Move the code to the SURFnet git repo
- Release Spring-security-opensaml to get rid of snapshot dependency

NICE:
- ClientResource and ResourceServerResource must debug log all activity
- Document OAuth2Validator to explain or comply to spec compliance
- The client in the authorization server should ask for scopes (read, write) and based on the granted scopes the ui
  should be modified